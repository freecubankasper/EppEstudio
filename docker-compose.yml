version: '3'
services:
  #servicio de base de datos postgres
  db_postgres:
    #image: postgres:15.1-focal
    image: postgres:13.2-alpine
    #restart: always
    volumes:
      - ./data/db:/var/lib/postgresql/data
      - ./backups:/backups
    env_file:
      - .env
##########################################################

  #pgadmin para la administracion web de postgres    
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:6.16
    env_file:
      - ./pgadmin/.env
    ports:
      - 5050:80
    depends_on:
      - db_postgres  
##########################################################

  #back-end Django+python using guicorn to run the web server
  web_python:
    build: .
    labels:
      - "traefik.http.routers.web_python.rule=Host(`web_python.docker.localhost`)"
    #restart: always
    #command: python manage.py runserver 0.0.0.0:8000 
    #volumes:
    #  - ./volumen:/eppEstudio50-main
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      # django envs
      PRODUCTION: "1"
      SECRET_KEY: xxzrf8mOUttvgswmYJ6UmIGzZAIHQgpg1S+O42j3n2quTLJTDeOZNA
      DEBUG: "0"
      ALLOWED_HOSTS: "localhost,72.167.50.223.nip.io"
    depends_on:
      - db_postgres
##########################################################

  #nginx web server to get requests
  nginx:
    container_name: nginx
    build: ./nginx
    labels:
      - "traefik.http.routers.nginx.rule=Host(`nginx.docker.localhost`)"
    ports:
      - 80:80
    volumes:
      - ./nginx/static:/static
    depends_on:
      - web_python    
  ##########################################################   
